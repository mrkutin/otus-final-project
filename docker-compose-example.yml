version: '3'

services:
  mongodb-cfg:
    image: docker.io/bitnami/mongodb-sharded:6.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-cfg
      - MONGODB_SHARDING_MODE=configsvr
      - MONGODB_ROOT_PASSWORD=topsecret
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=cfgreplicaset
    volumes:
      - ./sharded-cluster-data/cfg_data:/bitnami

  mongodb-sharded:
    image: docker.io/bitnami/mongodb-sharded:6.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-sharded
      - MONGODB_SHARDING_MODE=mongos
      - MONGODB_CFG_PRIMARY_HOST=mongodb-cfg
      - MONGODB_CFG_REPLICA_SET_NAME=cfgreplicaset
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_ROOT_PASSWORD=topsecret
    ports:
      - "27017:27017"
    volumes:
      - ./sharded-cluster-data/sharded_data:/bitnami

  mongodb-shard0:
    image: docker.io/bitnami/mongodb-sharded:6.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard0
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_MONGOS_HOST=mongodb-sharded
      - MONGODB_ROOT_PASSWORD=topsecret
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=shard0
    volumes:
      - ./sharded-cluster-data/shard0_data:/bitnami

  mongodb-shard1:
    image: docker.io/bitnami/mongodb-sharded:6.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard1
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_MONGOS_HOST=mongodb-sharded
      - MONGODB_ROOT_PASSWORD=topsecret
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=shard1
    volumes:
      - ./sharded-cluster-data/shard1_data:/bitnami


  webserver:
    depends_on:
      - mongodb-sharded
    #      - redis
    build:
      context: ./services/web/
    image: webserver
    restart: on-failure
    ports:
      - 3000:3000
    environment:
      DB_HOST: mongodb-sharded
  #      REDIS_HOST: redis






  redis:
    image: redis/redis-stack
    restart: on-failure
    ports:
      - 6379:6379
      - 8001:8001
    environment:
      REDIS_ARGS: --save 60 1 --notify-keyspace-events KEA
    volumes:
      - ./services/redis/:/data




  redis-node-0:
    image: docker.io/bitnami/redis-cluster:7.2
    volumes:
      - redis-cluster_data-0:/bitnami/redis/data
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-1:
    image: docker.io/bitnami/redis-cluster:7.2
    volumes:
      - redis-cluster_data-1:/bitnami/redis/data
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-2:
    image: docker.io/bitnami/redis-cluster:7.2
    volumes:
      - redis-cluster_data-2:/bitnami/redis/data
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-3:
    image: docker.io/bitnami/redis-cluster:7.2
    volumes:
      - redis-cluster_data-3:/bitnami/redis/data
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-4:
    image: docker.io/bitnami/redis-cluster:7.2
    volumes:
      - redis-cluster_data-4:/bitnami/redis/data
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-5:
    image: docker.io/bitnami/redis-cluster:7.2
    volumes:
      - redis-cluster_data-5:/bitnami/redis/data
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'
      - 'REDIS_CLUSTER_REPLICAS=1'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'REDIS_CLUSTER_CREATOR=yes'
    ports:
      - 6379:6379






  monolith:
    depends_on:
      - mongodb
      - mongodb-sharded
    build:
      context: services/monolith/
    image: monolith
    restart: on-failure
    ports:
      - 3000:3000
    environment:
      DB_HOST: mongodb
      PORT: 3000

  dialog:
    depends_on:
      - redis-node-5
    build:
      context: services/dialog/
    image: dialog
    restart: on-failure
    ports:
      - 3001:3001
    environment:
      REDIS_HOST: redis
      PORT: 3001
      MONOLITH_HOST: nginx
      MONOLITH_PORT: 80

  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - 8080:80
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
